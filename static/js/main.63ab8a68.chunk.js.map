{"version":3,"sources":["../../src/index.ts","../../src/flex-dropdown.tsx","example1.tsx","example2.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["Toggle","FlexDropdownToggle","Open","FlexDropdownOpen","Close","FlexDropdownClose","Menu","FlexDropdownMenu","Container","FlexDropdownContainer","Item","FlexDropdownItem","FlexDropdown","_FlexDropdown","div","props","state","open","handleClickToggle","this","setState","prevState","handleClickItem","handleClickOutside","render","toggle","Children","toArray","children","find","child","isValidElement","type","toggleWithProps","cloneElement","_open","_onClickToggle","bind","menu","menuWithProps","_onClickItem","Component","openWithProps","close","closeWithProps","_FlexDropdownOpen","className","style","onClick","_FlexDropdownClose","_FlexDropdownMenu","top","interval","align","Object","assign","left","right","map","_FlexDropdownItem","e","Example1","to","icon","faCaretDown","fixedWidth","faCaretUp","Example2","faBars","faTimes","backgroundColor","App","basename","process","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63ab8a68.chunk.js","sourcesContent":["import {\n  default as _FlexDropdown,\n  FlexDropdownToggle,\n  FlexDropdownOpen,\n  FlexDropdownClose,\n  FlexDropdownMenu,\n  FlexDropdownContainer,\n  FlexDropdownItem\n} from './flex-dropdown';\n\nexport default class FlexDropdown extends _FlexDropdown {\n  static Toggle = FlexDropdownToggle;\n  static Open = FlexDropdownOpen;\n  static Close = FlexDropdownClose;\n  static Menu = FlexDropdownMenu;\n  static Container = FlexDropdownContainer;\n  static Item = FlexDropdownItem;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport onClickOutside from 'react-onclickoutside';\n\n// TODO: Centering\n// TODO: Animation\n\nexport interface FlexDropdownProps { }\n\ninterface FlexDropdownState {\n  open: boolean;\n}\n\nconst _FlexDropdown = styled.div`\n  position: relative;\n`;\n\nclass FlexDropdown extends React.Component<FlexDropdownProps, FlexDropdownState> {\n  constructor(props: FlexDropdownProps) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n\n  handleClickToggle() {\n    this.setState(prevState => ({\n      open: !prevState.open\n    }));\n  }\n\n  handleClickItem() {\n    this.setState({\n      open: false\n    });\n  }\n\n  handleClickOutside() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    const toggle = React.Children.toArray(this.props.children).find(child =>\n      React.isValidElement(child) && child.type === FlexDropdownToggle\n    );\n    const toggleWithProps = React.cloneElement(toggle as React.ReactElement, {\n      _open: this.state.open,\n      _onClickToggle: this.handleClickToggle.bind(this)\n    });\n    const menu = React.Children.toArray(this.props.children).find(child =>\n      React.isValidElement(child) && child.type === FlexDropdownMenu\n    );\n    const menuWithProps = React.cloneElement(menu as React.ReactElement, {\n      _onClickItem: this.handleClickItem.bind(this)\n    });\n\n    return (\n      <_FlexDropdown>\n        {toggleWithProps}\n        {this.state.open && menuWithProps}\n      </_FlexDropdown>\n    );\n  }\n}\n\nexport default onClickOutside(FlexDropdown);\n\nexport interface FlexDropdownToggleProps {\n  _open?: boolean;\n  _onClickToggle?: () => void;\n}\n\nexport const FlexDropdownToggle: React.FC<FlexDropdownToggleProps> = props => {\n  const open = React.Children.toArray(props.children).find(child =>\n    React.isValidElement(child) && child.type === FlexDropdownOpen\n  );\n  const openWithProps = React.cloneElement(open as React.ReactElement, {\n    _onClickToggle: () => props._onClickToggle!()\n  });\n  const close = React.Children.toArray(props.children).find(child =>\n    React.isValidElement(child) && child.type === FlexDropdownClose\n  );\n  const closeWithProps = React.cloneElement(close as React.ReactElement, {\n    _onClickToggle: () => props._onClickToggle!()\n  });\n\n  return props._open ? closeWithProps : openWithProps;\n};\n\nexport interface FlexDropdownOpenProps {\n  className?: string;\n  style?: React.CSSProperties;\n  _onClickToggle?: () => void;\n}\n\nconst _FlexDropdownOpen = styled.div`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const FlexDropdownOpen: React.FC<FlexDropdownOpenProps> = props => {\n  return (\n    <_FlexDropdownOpen\n      className={props.className ? props.className : ''}\n      style={props.style ? props.style : {}}\n      onClick={() => props._onClickToggle!()}\n    >\n      {props.children}\n    </_FlexDropdownOpen>\n  );\n};\n\nexport interface FlexDropdownCloseProps {\n  className?: string;\n  style?: React.CSSProperties;\n  _onClickToggle?: () => void;\n}\n\nconst _FlexDropdownClose = styled.div`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const FlexDropdownClose: React.FC<FlexDropdownCloseProps> = props => {\n  return (\n    <_FlexDropdownClose\n      className={props.className ? props.className : ''}\n      style={props.style ? props.style : {}}\n      onClick={() => props._onClickToggle!()}\n    >\n      {props.children}\n    </_FlexDropdownClose>\n  );\n};\n\nexport interface FlexDropdownMenuProps {\n  className?: string;\n  style?: React.CSSProperties;\n  interval: string;\n  align: 'left' | 'right';\n  _onClickItem?: () => void;\n}\n\nconst _FlexDropdownMenu = styled.div`\n  position: absolute;\n  width: max-content;\n`;\n\nexport const FlexDropdownMenu: React.FC<FlexDropdownMenuProps> = props => {\n  let style: React.CSSProperties = {\n    top: `calc(100% + ${props.interval})`\n  };\n  if (props.align === 'left') {\n    style = Object.assign(style, { left: '0px' });\n  } else if (props.align === 'right') {\n    style = Object.assign(style, { right: '0px' });\n  }\n\n  const children = React.Children.map(props.children, child => {\n    if (\n      React.isValidElement(child) &&\n      (child.type === FlexDropdownContainer || child.type === FlexDropdownItem)\n    ) {\n      return React.cloneElement(child, {\n        _onClickItem: () => props._onClickItem!()\n      });\n    } else {\n      return child;\n    }\n  });\n\n  return (\n    <_FlexDropdownMenu style={style}>\n      <div\n        className={props.className ? props.className : ''}\n        style={props.style ? props.style : {}}\n      >\n        {children}\n      </div>\n    </_FlexDropdownMenu>\n  );\n};\n\nexport interface FlexDropdownContainerProps {\n  className?: string;\n  style?: React.CSSProperties;\n  _onClickItem?: () => void;\n}\n\nexport const FlexDropdownContainer: React.FC<FlexDropdownContainerProps> = props => {\n  const children = React.Children.map(props.children, child => {\n    if (\n      React.isValidElement(child) &&\n      (child.type === FlexDropdownContainer || child.type === FlexDropdownItem)\n    ) {\n      return React.cloneElement(child, {\n        _onClickItem: () => props._onClickItem!()\n      });\n    } else {\n      return child;\n    }\n  });\n\n  return (\n    <div\n      className={props.className ? props.className : ''}\n      style={props.style ? props.style : {}}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport interface FlexDropdownItemProps {\n  className?: string;\n  style?: React.CSSProperties;\n  onClick?: (e: React.MouseEvent) => void;\n  _onClickItem?: () => void;\n}\n\nconst _FlexDropdownItem = styled.div`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const FlexDropdownItem: React.FC<FlexDropdownItemProps> = props => {\n  return (\n    <_FlexDropdownItem\n      className={props.className ? props.className : ''}\n      style={props.style ? props.style : {}}\n      onClick={e => {\n        if (props.onClick) props.onClick(e);\n        props._onClickItem!();\n      }}\n    >\n      {props.children}\n    </_FlexDropdownItem>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport FlexDropdown from 'react-flex-dropdown';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport './header.scss';\nimport './example1.scss';\n\nconst Example1: React.FC = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header__title\">\n        <div className=\"title\">Example 1</div>\n      </div>\n\n      <div className=\"header__menu\">\n        <div className=\"menu\">\n          <Link to=\"/example1\" className=\"menu__item\">Exapmle 1</Link>\n          <div className=\"menu__separator\" />\n          <Link to=\"/example2\" className=\"menu__item\">Exapmle 2</Link>\n          <div className=\"menu__spacer\" />\n          <FlexDropdown>\n            <FlexDropdown.Toggle>\n              <FlexDropdown.Open className=\"menu__item\">\n                <FontAwesomeIcon icon={faCaretDown} fixedWidth />\n              </FlexDropdown.Open>\n              <FlexDropdown.Close className=\"menu__item\">\n                <FontAwesomeIcon icon={faCaretUp} fixedWidth />\n              </FlexDropdown.Close>\n            </FlexDropdown.Toggle>\n            <FlexDropdown.Menu className=\"example1-dropdown-menu\" interval=\"4px\" align=\"right\">\n              <FlexDropdown.Item className=\"example1-dropdown-menu__item\">Item 1</FlexDropdown.Item>\n              <FlexDropdown.Item className=\"example1-dropdown-menu__item\">Item 2</FlexDropdown.Item>\n              <FlexDropdown.Item className=\"example1-dropdown-menu__item\">Item 3</FlexDropdown.Item>\n              <FlexDropdown.Item className=\"example1-dropdown-menu__item\">Item 4</FlexDropdown.Item>\n            </FlexDropdown.Menu>\n          </FlexDropdown>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Example1;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport FlexDropdown from 'react-flex-dropdown';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faBars } from '@fortawesome/free-solid-svg-icons';\nimport './header.scss';\nimport './example2.scss';\n\nconst Example2: React.FC = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header__title\">\n        <div className=\"title\">Example 2</div>\n      </div>\n\n      <div className=\"header__menu\">\n        <div className=\"menu\">\n          <Link to=\"/example1\" className=\"menu__item\">Exapmle 1</Link>\n          <div className=\"menu__separator\" />\n          <Link to=\"/example2\" className=\"menu__item\">Exapmle 2</Link>\n          <div className=\"menu__spacer\" />\n          <FlexDropdown>\n            <FlexDropdown.Toggle>\n              <FlexDropdown.Open className=\"menu__item\">\n                <FontAwesomeIcon icon={faBars} fixedWidth />\n              </FlexDropdown.Open>\n              <FlexDropdown.Close className=\"menu__item\">\n                <FontAwesomeIcon icon={faTimes} fixedWidth />\n              </FlexDropdown.Close>\n            </FlexDropdown.Toggle>\n            <FlexDropdown.Menu className=\"example2-dropdown-menu\" interval=\"4px\" align=\"right\">\n              <FlexDropdown.Container className=\"example2-dropdown-menu__row\">\n                <FlexDropdown.Item\n                  className=\"example2-dropdown-menu__item\"\n                  style={{ backgroundColor: 'lightblue' }}\n                >\n                  Item 1\n                </FlexDropdown.Item>\n                <FlexDropdown.Item\n                  className=\"example2-dropdown-menu__item\"\n                  style={{ backgroundColor: 'lightgreen' }}\n                >\n                  Item 2\n                </FlexDropdown.Item>\n              </FlexDropdown.Container>\n              <FlexDropdown.Container className=\"example2-dropdown-menu__row\">\n                <FlexDropdown.Item\n                  className=\"example2-dropdown-menu__item\"\n                  style={{ backgroundColor: 'orange' }}\n                >\n                  Item 3\n                </FlexDropdown.Item>\n                <FlexDropdown.Item\n                  className=\"example2-dropdown-menu__item\"\n                  style={{ backgroundColor: 'greenyellow' }}\n                >\n                  Item 4\n                </FlexDropdown.Item>\n              </FlexDropdown.Container>\n            </FlexDropdown.Menu>\n          </FlexDropdown>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Example2;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Example1 from './example1';\nimport Example2 from './example2';\nimport './app.scss';\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/example1\" exact component={Example1}/>\n          <Route path=\"/example2\" exact component={Example2}/>\n          <Route exact component={Example1}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}