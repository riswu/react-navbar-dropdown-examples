{"version":3,"sources":["example1.tsx","example2.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["Example1Dropdown","Toggle","Open","className","icon","faCaretDown","fixedWidth","Close","faCaretUp","CSSTransitionMenu","classNames","timeout","Item","onClick","alert","faUser","faBookmark","faArchive","faCog","Example1","to","Example2Dropdown","faTh","faTimes","Menu","Example2","App","basename","path","exact","component","faArrowUp","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.506bf2bb.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport NavbarDropdown from 'react-navbar-dropdown';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp, faCaretDown, faUser, faBookmark, faArchive, faCog } from '@fortawesome/free-solid-svg-icons';\nimport './navbar.scss';\nimport './example1.scss';\n\nconst Example1Dropdown: React.FC = () => {\n  return (\n    <NavbarDropdown>\n      <NavbarDropdown.Toggle>\n        <NavbarDropdown.Open className=\"menu__item\">\n          <FontAwesomeIcon icon={faCaretDown} fixedWidth />\n        </NavbarDropdown.Open>\n        <NavbarDropdown.Close className=\"menu__item\">\n          <FontAwesomeIcon icon={faCaretUp} fixedWidth />\n        </NavbarDropdown.Close>\n      </NavbarDropdown.Toggle>\n      <NavbarDropdown.CSSTransitionMenu\n        className=\"example1-dropdown-menu\"\n        classNames=\"example1-dropdown-menu\"\n        timeout={200}\n      >\n        <NavbarDropdown.Item className=\"example1-dropdown-menu-item\" onClick={() => alert('Item 1: clicked!')}>\n          <div>\n            <FontAwesomeIcon icon={faUser} fixedWidth />\n          </div>\n          <div className=\"example1-dropdown-menu-item__spacer\" />\n          <div className=\"example1-dropdown-menu-item__text\">Item 1</div>\n        </NavbarDropdown.Item>\n        <NavbarDropdown.Item className=\"example1-dropdown-menu-item\" onClick={() => alert('Item 2: clicked!')}>\n          <div>\n            <FontAwesomeIcon icon={faBookmark} fixedWidth />\n          </div>\n          <div className=\"example1-dropdown-menu-item__spacer\" />\n          <div className=\"example1-dropdown-menu-item__text\">Item 2</div>\n        </NavbarDropdown.Item>\n        <NavbarDropdown.Item className=\"example1-dropdown-menu-item\" onClick={() => alert('Item 3: clicked!')}>\n          <div>\n            <FontAwesomeIcon icon={faArchive} fixedWidth />\n          </div>\n          <div className=\"example1-dropdown-menu-item__spacer\" />\n          <div className=\"example1-dropdown-menu-item__text\">Item 3</div>\n        </NavbarDropdown.Item>\n        <NavbarDropdown.Item className=\"example1-dropdown-menu-item\" onClick={() => alert('Item 4: clicked!')}>\n          <div>\n            <FontAwesomeIcon icon={faCog} fixedWidth />\n          </div>\n          <div className=\"example1-dropdown-menu-item__spacer\" />\n          <div className=\"example1-dropdown-menu-item__text\">Item 4</div>\n        </NavbarDropdown.Item>\n      </NavbarDropdown.CSSTransitionMenu>\n    </NavbarDropdown>\n  );\n};\n\nconst Example1: React.FC = () => {\n  return (\n    <div className=\"navbar\">\n      <div className=\"navbar__title\">\n        <div className=\"title\">Example 1</div>\n      </div>\n      <div className=\"navbar__menu\">\n        <div className=\"menu\">\n          <Link className=\"menu__item\" to=\"/example1\">\n            Exapmle 1\n          </Link>\n          <div className=\"menu__separator\" />\n          <Link className=\"menu__item\" to=\"/example2\">\n            Exapmle 2\n          </Link>\n          <div className=\"menu__spacer\" />\n          <Example1Dropdown />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Example1;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport NavbarDropdown from 'react-navbar-dropdown';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faTh, faUser, faBookmark, faArchive, faCog } from '@fortawesome/free-solid-svg-icons';\nimport './navbar.scss';\nimport './example2.scss';\n\nconst Example2Dropdown: React.FC = () => {\n  return (\n    <NavbarDropdown>\n      <NavbarDropdown.Toggle>\n        <NavbarDropdown.Open className=\"menu__item\">\n          <FontAwesomeIcon icon={faTh} fixedWidth />\n        </NavbarDropdown.Open>\n        <NavbarDropdown.Close className=\"menu__item\">\n          <FontAwesomeIcon icon={faTimes} fixedWidth />\n        </NavbarDropdown.Close>\n      </NavbarDropdown.Toggle>\n      <NavbarDropdown.Menu className=\"example2-dropdown-menu\">\n        <div className=\"example2-dropdown-menu__row\">\n          <NavbarDropdown.Item className=\"example2-dropdown-menu-item\" onClick={() => alert('Item 1: clicked!')}>\n            <div className=\"example2-dropdown-menu-item__icon\">\n              <FontAwesomeIcon icon={faUser} fixedWidth />\n            </div>\n            <div className=\"example2-dropdown-menu-item__text\">Item 1</div>\n          </NavbarDropdown.Item>\n          <NavbarDropdown.Item className=\"example2-dropdown-menu-item\" onClick={() => alert('Item 2: clicked!')}>\n            <div className=\"example2-dropdown-menu-item__icon\">\n              <FontAwesomeIcon icon={faBookmark} fixedWidth />\n            </div>\n            <div className=\"example2-dropdown-menu-item__text\">Item 2</div>\n          </NavbarDropdown.Item>\n        </div>\n        <div className=\"example2-dropdown-menu__row\">\n          <NavbarDropdown.Item className=\"example2-dropdown-menu-item\" onClick={() => alert('Item 3: clicked!')}>\n            <div className=\"example2-dropdown-menu-item__icon\">\n              <FontAwesomeIcon icon={faArchive} fixedWidth />\n            </div>\n            <div className=\"example2-dropdown-menu-item__text\">Item 3</div>\n          </NavbarDropdown.Item>\n          <NavbarDropdown.Item className=\"example2-dropdown-menu-item\" onClick={() => alert('Item 4: clicked!')}>\n            <div className=\"example2-dropdown-menu-item__icon\">\n              <FontAwesomeIcon icon={faCog} fixedWidth />\n            </div>\n            <div className=\"example2-dropdown-menu-item__text\">Item 4</div>\n          </NavbarDropdown.Item>\n        </div>\n      </NavbarDropdown.Menu>\n    </NavbarDropdown>\n  );\n};\n\nconst Example2: React.FC = () => {\n  return (\n    <div className=\"navbar\">\n      <div className=\"navbar__title\">\n        <div className=\"title\">Example 2</div>\n      </div>\n      <div className=\"navbar__menu\">\n        <div className=\"menu\">\n          <Link className=\"menu__item\" to=\"/example1\">\n            Exapmle 1\n          </Link>\n          <div className=\"menu__separator\" />\n          <Link className=\"menu__item\" to=\"/example2\">\n            Exapmle 2\n          </Link>\n          <div className=\"menu__spacer\" />\n          <Example2Dropdown />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Example2;\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport Example1 from './example1';\nimport Example2 from './example2';\nimport './app.scss';\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/example1\" exact component={Example1} />\n          <Route path=\"/example2\" exact component={Example2} />\n          <Route exact component={Example1} />\n        </Switch>\n        <div className=\"body\">\n          <div className=\"body__note\">\n            The example is here <FontAwesomeIcon icon={faArrowUp} />\n          </div>\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}