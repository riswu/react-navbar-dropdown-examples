{"version":3,"sources":["../../src/index.ts","../../src/navbar-dropdown.tsx","example1.tsx","example2.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["Toggle","NavbarDropdownToggle","Open","NavbarDropdownOpen","Close","NavbarDropdownClose","Menu","NavbarDropdownMenu","Container","NavbarDropdownContainer","Item","NavbarDropdownItem","NavbarDropdown","_NavbarDropdown","div","props","state","open","handleClickToggle","this","setState","prevState","handleClickItem","handleClickOutside","render","toggle","Children","toArray","children","find","child","isValidElement","type","toggleWithProps","cloneElement","_open","_onClickToggle","bind","menu","menuWithProps","_onClickItem","Component","openWithProps","close","closeWithProps","_NavbarDropdownOpen","className","style","onClick","_NavbarDropdownClose","_NavbarDropdownMenu","top","between","align","Object","assign","left","right","map","_NavbarDropdownItem","e","Example1Dropdown","icon","faCaretDown","fixedWidth","faCaretUp","alert","Example1","to","Example2Dropdown","faBars","faTimes","backgroundColor","Example2","App","basename","path","exact","component","faArrowUp","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b00cb15a.chunk.js","sourcesContent":["import {\n  default as _NavbarDropdown,\n  NavbarDropdownToggle,\n  NavbarDropdownOpen,\n  NavbarDropdownClose,\n  NavbarDropdownMenu,\n  NavbarDropdownContainer,\n  NavbarDropdownItem\n} from './navbar-dropdown';\n\nexport default class NavbarDropdown extends _NavbarDropdown {\n  static Toggle = NavbarDropdownToggle;\n  static Open = NavbarDropdownOpen;\n  static Close = NavbarDropdownClose;\n  static Menu = NavbarDropdownMenu;\n  static Container = NavbarDropdownContainer;\n  static Item = NavbarDropdownItem;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport onClickOutside from 'react-onclickoutside';\n\n// TODO: Centering\n// TODO: Animation\n// TODO: Hover or Click\n\nexport interface NavbarDropdownProps { }\n\ninterface NavbarDropdownState {\n  open: boolean;\n}\n\nconst _NavbarDropdown = styled.div`\n  position: relative;\n`;\n\nclass NavbarDropdown extends React.Component<NavbarDropdownProps, NavbarDropdownState> {\n  constructor(props: NavbarDropdownProps) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n\n  handleClickToggle() {\n    this.setState(prevState => ({\n      open: !prevState.open\n    }));\n  }\n\n  handleClickItem() {\n    this.setState({\n      open: false\n    });\n  }\n\n  handleClickOutside() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    const toggle = React.Children.toArray(this.props.children).find(child =>\n      React.isValidElement(child) && child.type === NavbarDropdownToggle\n    );\n    const toggleWithProps = React.cloneElement(toggle as React.ReactElement, {\n      _open: this.state.open,\n      _onClickToggle: this.handleClickToggle.bind(this)\n    });\n    const menu = React.Children.toArray(this.props.children).find(child =>\n      React.isValidElement(child) && child.type === NavbarDropdownMenu\n    );\n    const menuWithProps = React.cloneElement(menu as React.ReactElement, {\n      _onClickItem: this.handleClickItem.bind(this)\n    });\n\n    return (\n      <_NavbarDropdown>\n        {toggleWithProps}\n        {this.state.open && menuWithProps}\n      </_NavbarDropdown>\n    );\n  }\n}\n\nexport default onClickOutside(NavbarDropdown);\n\nexport interface NavbarDropdownToggleProps {\n  _open?: boolean;\n  _onClickToggle?: () => void;\n}\n\nexport const NavbarDropdownToggle: React.FC<NavbarDropdownToggleProps> = props => {\n  const open = React.Children.toArray(props.children).find(child =>\n    React.isValidElement(child) && child.type === NavbarDropdownOpen\n  );\n  const openWithProps = React.cloneElement(open as React.ReactElement, {\n    _onClickToggle: () => props._onClickToggle!()\n  });\n  const close = React.Children.toArray(props.children).find(child =>\n    React.isValidElement(child) && child.type === NavbarDropdownClose\n  );\n  const closeWithProps = React.cloneElement(close as React.ReactElement, {\n    _onClickToggle: () => props._onClickToggle!()\n  });\n\n  return props._open ? closeWithProps : openWithProps;\n};\n\nexport interface NavbarDropdownOpenProps {\n  className?: string;\n  style?: React.CSSProperties;\n  _onClickToggle?: () => void;\n}\n\nconst _NavbarDropdownOpen = styled.div`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const NavbarDropdownOpen: React.FC<NavbarDropdownOpenProps> = props => {\n  return (\n    <_NavbarDropdownOpen\n      className={props.className ? props.className : ''}\n      style={props.style ? props.style : {}}\n      onClick={() => props._onClickToggle!()}\n    >\n      {props.children}\n    </_NavbarDropdownOpen>\n  );\n};\n\nexport interface NavbarDropdownCloseProps {\n  className?: string;\n  style?: React.CSSProperties;\n  _onClickToggle?: () => void;\n}\n\nconst _NavbarDropdownClose = styled.div`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const NavbarDropdownClose: React.FC<NavbarDropdownCloseProps> = props => {\n  return (\n    <_NavbarDropdownClose\n      className={props.className ? props.className : ''}\n      style={props.style ? props.style : {}}\n      onClick={() => props._onClickToggle!()}\n    >\n      {props.children}\n    </_NavbarDropdownClose>\n  );\n};\n\nexport interface NavbarDropdownMenuProps {\n  className?: string;\n  style?: React.CSSProperties;\n  between: string;\n  align: 'left' | 'right';\n  _onClickItem?: () => void;\n}\n\nconst _NavbarDropdownMenu = styled.div`\n  position: absolute;\n  width: max-content;\n`;\n\nexport const NavbarDropdownMenu: React.FC<NavbarDropdownMenuProps> = props => {\n  let style: React.CSSProperties = {\n    top: `calc(100% + ${props.between})`\n  };\n  if (props.align === 'left') {\n    style = Object.assign(style, { left: '0px' });\n  } else if (props.align === 'right') {\n    style = Object.assign(style, { right: '0px' });\n  }\n\n  const children = React.Children.map(props.children, child => {\n    if (\n      React.isValidElement(child) &&\n      (child.type === NavbarDropdownContainer || child.type === NavbarDropdownItem)\n    ) {\n      return React.cloneElement(child, {\n        _onClickItem: () => props._onClickItem!()\n      });\n    } else {\n      return child;\n    }\n  });\n\n  return (\n    <_NavbarDropdownMenu style={style}>\n      <div\n        className={props.className ? props.className : ''}\n        style={props.style ? props.style : {}}\n      >\n        {children}\n      </div>\n    </_NavbarDropdownMenu>\n  );\n};\n\nexport interface NavbarDropdownContainerProps {\n  className?: string;\n  style?: React.CSSProperties;\n  _onClickItem?: () => void;\n}\n\nexport const NavbarDropdownContainer: React.FC<NavbarDropdownContainerProps> = props => {\n  const children = React.Children.map(props.children, child => {\n    if (\n      React.isValidElement(child) &&\n      (child.type === NavbarDropdownContainer || child.type === NavbarDropdownItem)\n    ) {\n      return React.cloneElement(child, {\n        _onClickItem: () => props._onClickItem!()\n      });\n    } else {\n      return child;\n    }\n  });\n\n  return (\n    <div\n      className={props.className ? props.className : ''}\n      style={props.style ? props.style : {}}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport interface NavbarDropdownItemProps {\n  className?: string;\n  style?: React.CSSProperties;\n  onClick?: (e: React.MouseEvent) => void;\n  _onClickItem?: () => void;\n}\n\nconst _NavbarDropdownItem = styled.div`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const NavbarDropdownItem: React.FC<NavbarDropdownItemProps> = props => {\n  return (\n    <_NavbarDropdownItem\n      className={props.className ? props.className : ''}\n      style={props.style ? props.style : {}}\n      onClick={e => {\n        if (props.onClick) props.onClick(e);\n        props._onClickItem!();\n      }}\n    >\n      {props.children}\n    </_NavbarDropdownItem>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport NavbarDropdown from 'react-navbar-dropdown';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport './navbar.scss';\nimport './example1.scss';\n\nconst Example1Dropdown: React.FC = () => {\n  return (\n    <NavbarDropdown>\n      <NavbarDropdown.Toggle>\n        <NavbarDropdown.Open className=\"menu__item\">\n          <FontAwesomeIcon icon={faCaretDown} fixedWidth />\n        </NavbarDropdown.Open>\n        <NavbarDropdown.Close className=\"menu__item\">\n          <FontAwesomeIcon icon={faCaretUp} fixedWidth />\n        </NavbarDropdown.Close>\n      </NavbarDropdown.Toggle>\n      <NavbarDropdown.Menu\n        className=\"example1-dropdown-menu\"\n        between=\"4px\"\n        align=\"right\"\n      >\n        <NavbarDropdown.Item\n          className=\"example1-dropdown-menu__item\"\n          onClick={() => alert('Item 1: clicked!')}\n        >\n          Item 1\n        </NavbarDropdown.Item>\n        <NavbarDropdown.Item\n          className=\"example1-dropdown-menu__item\"\n          onClick={() => alert('Item 2: clicked!')}\n        >\n          Item 2\n        </NavbarDropdown.Item>\n        <NavbarDropdown.Item\n          className=\"example1-dropdown-menu__item\"\n          onClick={() => alert('Item 3: clicked!')}\n        >\n          Item 3\n        </NavbarDropdown.Item>\n        <NavbarDropdown.Item\n          className=\"example1-dropdown-menu__item\"\n          onClick={() => alert('Item 4: clicked!')}\n        >\n          Item 4\n        </NavbarDropdown.Item>\n      </NavbarDropdown.Menu>\n    </NavbarDropdown>\n  );\n};\n\nconst Example1: React.FC = () => {\n  return (\n    <div className=\"navbar\">\n      <div className=\"navbar__title\">\n        <div className=\"title\">Example 1</div>\n      </div>\n      <div className=\"navbar__menu\">\n        <div className=\"menu\">\n          <Link to=\"/example1\" className=\"menu__item\">Exapmle 1</Link>\n          <div className=\"menu__separator\" />\n          <Link to=\"/example2\" className=\"menu__item\">Exapmle 2</Link>\n          <div className=\"menu__spacer\" />\n          <Example1Dropdown />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Example1;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport NavbarDropdown from 'react-navbar-dropdown';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faBars } from '@fortawesome/free-solid-svg-icons';\nimport './navbar.scss';\nimport './example2.scss';\n\nconst Example2Dropdown: React.FC = () => {\n  return (\n    <NavbarDropdown>\n      <NavbarDropdown.Toggle>\n        <NavbarDropdown.Open className=\"menu__item\">\n          <FontAwesomeIcon icon={faBars} fixedWidth />\n        </NavbarDropdown.Open>\n        <NavbarDropdown.Close className=\"menu__item\">\n          <FontAwesomeIcon icon={faTimes} fixedWidth />\n        </NavbarDropdown.Close>\n      </NavbarDropdown.Toggle>\n      <NavbarDropdown.Menu\n        className=\"example2-dropdown-menu\"\n        between=\"4px\"\n        align=\"right\"\n      >\n        <NavbarDropdown.Container\n          className=\"example2-dropdown-menu__row\"\n        >\n          <NavbarDropdown.Item\n            className=\"example2-dropdown-menu__item\"\n            style={{ backgroundColor: 'lightblue' }}\n            onClick={() => alert('Item 1: clicked!')}\n          >\n            Item 1\n          </NavbarDropdown.Item>\n          <NavbarDropdown.Item\n            className=\"example2-dropdown-menu__item\"\n            style={{ backgroundColor: 'lightgreen' }}\n            onClick={() => alert('Item 2: clicked!')}\n          >\n            Item 2\n          </NavbarDropdown.Item>\n        </NavbarDropdown.Container>\n        <NavbarDropdown.Container\n          className=\"example2-dropdown-menu__row\"\n        >\n          <NavbarDropdown.Item\n            className=\"example2-dropdown-menu__item\"\n            style={{ backgroundColor: 'orange' }}\n            onClick={() => alert('Item 3: clicked!')}\n          >\n            Item 3\n          </NavbarDropdown.Item>\n          <NavbarDropdown.Item\n            className=\"example2-dropdown-menu__item\"\n            style={{ backgroundColor: 'greenyellow' }}\n            onClick={() => alert('Item 4: clicked!')}\n          >\n            Item 4\n          </NavbarDropdown.Item>\n        </NavbarDropdown.Container>\n      </NavbarDropdown.Menu>\n    </NavbarDropdown>\n  );\n};\n\nconst Example2: React.FC = () => {\n  return (\n    <div className=\"navbar\">\n      <div className=\"navbar__title\">\n        <div className=\"title\">Example 2</div>\n      </div>\n      <div className=\"navbar__menu\">\n        <div className=\"menu\">\n          <Link to=\"/example1\" className=\"menu__item\">Exapmle 1</Link>\n          <div className=\"menu__separator\" />\n          <Link to=\"/example2\" className=\"menu__item\">Exapmle 2</Link>\n          <div className=\"menu__spacer\" />\n          <Example2Dropdown />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Example2;\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport Example1 from './example1';\nimport Example2 from './example2';\nimport './app.scss';\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/example1\" exact component={Example1}/>\n          <Route path=\"/example2\" exact component={Example2}/>\n          <Route exact component={Example1}/>\n        </Switch>\n        <div className=\"body\">\n          <div className=\"body__note\">\n            The example is here <FontAwesomeIcon icon={faArrowUp} />\n          </div>\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}